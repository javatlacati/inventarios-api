quarkus.http.port=8080

# GraphiQL
quarkus.smallrye-graphql.ui.always-include=true

# JPA
quarkus.hibernate-orm.second-level-caching-enabled=false
quarkus.hibernate-orm.log-session-metrics=true
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.format-sql=true
quarkus.hibernate-orm.log.bind-param=true
#quarkus.log.category.org.hibernate.level=DEBUG


quarkus.datasource.db-kind=postgresql
#quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres
quarkus.datasource.username=admin
quarkus.datasource.password=password
quarkus.datasource.reactive.max-size=20
#quarkus.datasource.jdbc=false
#first url is to run from another docker container
#quarkus.datasource.reactive.url=postgresql://host.docker.internal:5432/postgres
#second url is to run from another podman container
quarkus.datasource.reactive.url=postgresql://10.0.2.2:5432/postgres
#third url is to run from localhost
#quarkus.datasource.reactive.url=postgresql://localhost:5432/postgres

quarkus.hibernate-orm.database.generation=drop-and-create 
quarkus.hibernate-orm.packages=inventarios.to
#quarkus.hibernate-orm.conn.packages=inventarios.to
#quarkus.hibernate-orm.datasource=inventario

#quarkus.datasource.db-kind=h2
#quarkus.datasource.jdbc.url=jdbc:h2:mem:inventario

# Primary tenant
#quarkus.datasource.primary.db-kind=h2
#quarkus.datasource.primary.username=reportinguser
#quarkus.datasource.primary.password=pw123
#quarkus.datasource.primary.jdbc.url=jdbc:h2:mem:inventario

# to prefill with sql script
#quarkus.hibernate-orm.sql-load-script=import.sql

quarkus.http.cors=true
quarkus.http.cors.methods=GET,PUT,POST
#cors.origins
